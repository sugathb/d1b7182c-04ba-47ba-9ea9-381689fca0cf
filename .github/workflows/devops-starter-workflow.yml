name: Build and deploy Docker app to Azure
on:
  push:
    branches:
      - master

env:
  APPNAME: longest-increasing-sequence
  APPLICATIONPATH: Application
  HOSTINGPLAN: longest-increasing-sequence
  DOCKERFILEPATH: "Application/LongestIncreasingSubsequence.Api"
  REGISTRYSKU: "Standard"
  REGISTRYNAME: "longestincreasingsequenceacr"
  REGISTRYLOCATION: "Australia Southeast"
  IMAGENAME: "longestincreasingsequence9f68"
  RESOURCEGROUPNAME: longest-increasing-sequence-rg
  LOCATION: Australia Southeast
  APPINSIGHTSLOCATION: Australia Southeast
  SUBSCRIPTIONID: c35b1c11-ffb2-4aa7-b1d0-1d58c1d6c269
  SKU: S1 Standard

jobs:
  build:
    name: Build and push application to ACR
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master

    - name: Azure authentication
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Build and Run unit tests 
      run: | 
            pushd ${{ env.APPLICATIONPATH }}
            dotnet restore
            dotnet build --configuration Release
            dotnet test LongestIncreasingSubsequence.ApplicationServices.Tests/LongestIncreasingSubsequence.ApplicationServices.Tests.csproj  --verbosity normal
            popd

  #  # Create Azure container registry
  #  - uses: azure/arm-deploy@v1
  #    id: createAcr
  #    with:
  #      subscriptionId: ${{ env.SUBSCRIPTIONID }}
  #      resourceGroupName: ${{ env.RESOURCEGROUPNAME }}
  #      template: ./ArmTemplates/containerRegistry-template.json
  #      parameters: registryName="${{ env.REGISTRYNAME }}" registryLocation="${{ env.REGISTRYLOCATION }}" registrySku="${{ env.REGISTRYSKU }}"

  #  - name: Fetch ACR credentials
  #    id: acrCredentials
  #    continue-on-error: false
  #    run: |
  #        echo "::set-output name=acr_username::`az acr credential show -n ${{ env.REGISTRYNAME }} --query username`"
  #        echo "::set-output name=acr_password::`az acr credential show -n ${{ env.REGISTRYNAME }} --query passwords[0].value`"
  #        echo "::add-mask::`az acr credential show -n ${{ env.REGISTRYNAME }} --query passwords[0].value`"

  #  - name: ACR authentication
  #    uses: azure/docker-login@v1
  #    with:
  #      login-server: ${{ env.REGISTRYNAME }}.azurecr.io
  #      username: ${{ steps.acrCredentials.outputs.acr_username }}
  #      password: ${{ steps.acrCredentials.outputs.acr_password }}

  #  - name: Docker Build & Push to ACR
  #    run: |
  #      docker login ${{ env.REGISTRYNAME }}.azurecr.io --username ${{ steps.acrCredentials.outputs.acr_username }} --password ${{ steps.acrCredentials.outputs.acr_password }}
  #      docker build "$GITHUB_WORKSPACE/${{env.DOCKERFILEPATH}}" -f  "${{env.DOCKERFILEPATH}}/Dockerfile" -t ${{ env.REGISTRYNAME }}.azurecr.io/${{ env.IMAGENAME }}:${{ github.sha }}
  #      docker push ${{ env.REGISTRYNAME }}.azurecr.io/${{ env.IMAGENAME }}:${{ github.sha }}

  #deploy:
  #  name: Deploy application to AKS
  #  needs: build
  #  runs-on: ubuntu-latest
  #  steps:
  #  - uses: actions/checkout@master

  #  - name: Azure authentication
  #    uses: azure/login@v1
  #    with:
  #      creds: ${{ secrets.AZURE_CREDENTIALS }}

  #  - uses: azure/arm-deploy@v1
  #    id: deploy
  #    with:
  #      subscriptionId: ${{ env.SUBSCRIPTIONID }}
  #      resourceGroupName: ${{ env.RESOURCEGROUPNAME }}
  #      template: ./ArmTemplates/container-webapp-template.json
  #      parameters: webAppName="${{ env.APPNAME }}" hostingPlanName="${{ env.HOSTINGPLAN }}" sku="${{ env.SKU }}" appInsightsLocation="${{ env.APPINSIGHTSLOCATION }}" registryName="${{ env.REGISTRYNAME }}" imageName="${{ env.IMAGENAME }}" registryLocation="${{ env.REGISTRYLOCATION }}" registrySku="${{ env.REGISTRYSKU }}"
 
  #  - name: Get ACR credentials
  #    id: getACRCred
  #    run: |
  #         echo "::set-output name=acr_username::`az acr credential show -n ${{ env.REGISTRYNAME }} --query username | xargs`"
  #         echo "::set-output name=acr_password::`az acr credential show -n ${{ env.REGISTRYNAME }} --query passwords[0].value | xargs`"
  #         echo "::add-mask::`az acr credential show -n ${{ env.REGISTRYNAME }} --query passwords[0].value | xargs`" 

  #  - name: 'Deploy to Azure Web App for Container'
  #    uses: azure/webapps-deploy@v2
  #    with: 
  #      app-name: ${{ env.APPNAME }} 
  #      images: ${{ env.REGISTRYNAME }}.azurecr.io/${{ env.IMAGENAME }}:${{ github.sha }}